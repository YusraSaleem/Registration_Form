import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class GUI2 extends JFrame {
    JTextField txt1;
    JTextField txt2;
    JTextField txt3;
    JTextField txt4;
    JTextField txt5;
    JTextField txt6;
    JTextField txt7;
    JTextField txt8;
    JTextField txt9;
    private JLabel reg;
    private JLabel name;
    private JLabel batch;
    private JLabel section;
    private JLabel rollno;
    private JLabel gender;
    private JLabel education;
    private JLabel address;
    private JLabel country;
    private JPanel frame2panel;

    public GUI2(String title2) {
        super(title2);

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(frame2panel);
        this.pack();
    }

    public static void main(String[] args) {
        GUI2 frame2 = new GUI2("Student Registeration Form");

    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        frame2panel = new JPanel();
        frame2panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(9, 4, new Insets(0, 0, 0, 0), -1, -1));
        frame2panel.setBackground(new Color(-1079720));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        frame2panel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 6, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        reg = new JLabel();
        Font regFont = this.$$$getFont$$$(null, Font.BOLD, 14, reg.getFont());
        if (regFont != null) reg.setFont(regFont);
        reg.setForeground(new Color(-16777216));
        reg.setText("REG NO.");
        frame2panel.add(reg, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txt1 = new JTextField();
        txt1.setBackground(new Color(-1114881));
        Font txt1Font = this.$$$getFont$$$(null, -1, 14, txt1.getFont());
        if (txt1Font != null) txt1.setFont(txt1Font);
        frame2panel.add(txt1, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        frame2panel.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        name = new JLabel();
        Font nameFont = this.$$$getFont$$$(null, Font.BOLD, 14, name.getFont());
        if (nameFont != null) name.setFont(nameFont);
        name.setForeground(new Color(-16777216));
        name.setText("Name");
        frame2panel.add(name, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        batch = new JLabel();
        Font batchFont = this.$$$getFont$$$(null, Font.BOLD, 14, batch.getFont());
        if (batchFont != null) batch.setFont(batchFont);
        batch.setForeground(new Color(-16777216));
        batch.setText("Batch");
        frame2panel.add(batch, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        section = new JLabel();
        Font sectionFont = this.$$$getFont$$$(null, Font.BOLD, 14, section.getFont());
        if (sectionFont != null) section.setFont(sectionFont);
        section.setForeground(new Color(-16777216));
        section.setText("Section");
        frame2panel.add(section, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        rollno = new JLabel();
        Font rollnoFont = this.$$$getFont$$$(null, Font.BOLD, 14, rollno.getFont());
        if (rollnoFont != null) rollno.setFont(rollnoFont);
        rollno.setForeground(new Color(-16777216));
        rollno.setText("Roll Number");
        frame2panel.add(rollno, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gender = new JLabel();
        Font genderFont = this.$$$getFont$$$(null, Font.BOLD, 14, gender.getFont());
        if (genderFont != null) gender.setFont(genderFont);
        gender.setForeground(new Color(-16777216));
        gender.setText("Gender");
        frame2panel.add(gender, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        education = new JLabel();
        Font educationFont = this.$$$getFont$$$(null, Font.BOLD, 14, education.getFont());
        if (educationFont != null) education.setFont(educationFont);
        education.setForeground(new Color(-16777216));
        education.setText("Qualification");
        frame2panel.add(education, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        address = new JLabel();
        Font addressFont = this.$$$getFont$$$(null, Font.BOLD, 14, address.getFont());
        if (addressFont != null) address.setFont(addressFont);
        address.setForeground(new Color(-16777216));
        address.setText("Address");
        frame2panel.add(address, new com.intellij.uiDesigner.core.GridConstraints(7, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        country = new JLabel();
        Font countryFont = this.$$$getFont$$$(null, Font.BOLD, 14, country.getFont());
        if (countryFont != null) country.setFont(countryFont);
        country.setForeground(new Color(-16777216));
        country.setText("Country");
        frame2panel.add(country, new com.intellij.uiDesigner.core.GridConstraints(8, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txt2 = new JTextField();
        txt2.setBackground(new Color(-1114881));
        Font txt2Font = this.$$$getFont$$$(null, -1, 14, txt2.getFont());
        if (txt2Font != null) txt2.setFont(txt2Font);
        txt2.setText("");
        frame2panel.add(txt2, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txt3 = new JTextField();
        txt3.setBackground(new Color(-1114881));
        Font txt3Font = this.$$$getFont$$$(null, -1, 14, txt3.getFont());
        if (txt3Font != null) txt3.setFont(txt3Font);
        frame2panel.add(txt3, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txt4 = new JTextField();
        txt4.setBackground(new Color(-1114881));
        Font txt4Font = this.$$$getFont$$$(null, -1, 14, txt4.getFont());
        if (txt4Font != null) txt4.setFont(txt4Font);
        txt4.setText("");
        frame2panel.add(txt4, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txt5 = new JTextField();
        txt5.setBackground(new Color(-1114881));
        Font txt5Font = this.$$$getFont$$$(null, -1, 14, txt5.getFont());
        if (txt5Font != null) txt5.setFont(txt5Font);
        frame2panel.add(txt5, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txt6 = new JTextField();
        txt6.setBackground(new Color(-1114881));
        Font txt6Font = this.$$$getFont$$$(null, -1, 14, txt6.getFont());
        if (txt6Font != null) txt6.setFont(txt6Font);
        frame2panel.add(txt6, new com.intellij.uiDesigner.core.GridConstraints(5, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txt7 = new JTextField();
        txt7.setBackground(new Color(-1114881));
        Font txt7Font = this.$$$getFont$$$(null, -1, 14, txt7.getFont());
        if (txt7Font != null) txt7.setFont(txt7Font);
        frame2panel.add(txt7, new com.intellij.uiDesigner.core.GridConstraints(6, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txt8 = new JTextField();
        txt8.setBackground(new Color(-1114881));
        Font txt8Font = this.$$$getFont$$$(null, -1, 14, txt8.getFont());
        if (txt8Font != null) txt8.setFont(txt8Font);
        frame2panel.add(txt8, new com.intellij.uiDesigner.core.GridConstraints(7, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txt9 = new JTextField();
        txt9.setBackground(new Color(-1114881));
        Font txt9Font = this.$$$getFont$$$(null, -1, 14, txt9.getFont());
        if (txt9Font != null) txt9.setFont(txt9Font);
        frame2panel.add(txt9, new com.intellij.uiDesigner.core.GridConstraints(8, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        frame2panel.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return frame2panel;
    }
}
